@model MusicServiceInfrastructure.ViewModel.SongsViewModel

@{
    ViewData["Title"] = "Докладніше";
}

<br />
<h1>Докладніше</h1>

<div>
    <h4>Пісня</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ArtistName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ArtistName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.GenreName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.GenreName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.LyricsText)
        </dt>
        <dd class="col-sm-10">
            @if (!string.IsNullOrEmpty(Model.LyricsText))
            {
                @Html.Raw(Model.LyricsText.Replace("\n", "<br/>"))
            }
            else
            {
                @Html.DisplayFor(model => model.LyricsText)
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.AlbumName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.AlbumName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Duration)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Duration)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id" class="btn btn-outline-primary">Редагувати</a> |
    <a asp-action="Index" class="btn btn-outline-dark">Повернутися до списку</a>
</div>